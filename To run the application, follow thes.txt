Let me explain the code and how it works:

The application is a dynamic dashboard built with React, Redux, and TypeScript. Here's a breakdown of the main components:

Core Features:

Dynamic widget management
Category organization
Real-time search
Interactive charts and progress bars
Modal-based widget and category creation
Key Components:

App.tsx: Main dashboard layout
AddWidgetModal.tsx: Modal for adding new widgets
AddCategoryModal.tsx: Modal for creating categories
WidgetContent.tsx: Renders different widget types (charts, progress bars)
SearchBar.tsx: Handles widget filtering
State Management:

Uses Redux for state management
dashboardSlice.ts handles all dashboard operations
Supports adding/removing widgets and categories
Maintains search functionality
Widget Types:

Donut charts (using Chart.js)
Progress bars
Text content
To run the application:

Install dependencies:

npm install
Start the development server:

npm run dev
You can then:

Add categories with the "Add Category" button
Add widgets to categories using "Add Widget"
Remove widgets with the X icon
Search widgets using the search bar
Delete categories with the trash icon
The data structure uses a JSON format where each widget can have different types of content (charts, progress bars, or text), making it highly flexible and extensible.

The application is already set up with sample data showing:

Cloud account statistics
Risk assessment metrics
Registry scan information
All changes persist in the Redux store during the session, and the UI updates automatically when modifications are made.
